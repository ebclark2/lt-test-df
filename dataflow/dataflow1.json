{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "storage",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "storage",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'filename',",
				"     format: 'json',",
				"     container: 'input',",
				"     fileName: 'test3-utf16.txt',",
				"     encodingName: 'UTF-16',",
				"     documentForm: 'arrayOfDocuments') ~> source1",
				"source1 derive(key = toString(byName('key')),",
				"          timestamp = toTimestamp(\"2021-04-18T02:04:22.123\", \"yyyy-MM-dd'T'hh:mm:ss.SSS\")) ~> MapDrifted1",
				"MapDrifted1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'json',",
				"     container: 'output',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          niftyKey = key,",
				"          filename,",
				"          each(match(name==\"timestamp\"),",
				"               \"timestamp\" = $$)",
				"     ),",
				"     partitionBy('roundRobin', 2)) ~> sink1"
			]
		}
	}
}